package com.phoneList.webService.restful;

import java.util.List;

import javax.persistence.EntityManager;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import org.codehaus.jettison.json.JSONArray;
import org.codehaus.jettison.json.JSONObject;
import org.primefaces.json.JSONException;

import com.phoneList.DAO.TelefoneDAO;
import com.phoneList.DAOImpl.TelefoneDAOImpl;
import com.phoneList.JSON.TelefoneToJSON;
import com.phoneList.entity.Telefone;
import com.phoneList.singleton.EntityManagerFactorySingleton;

@Path("/lista/telefones")
public class ListaTelefoneWSRest {
	
	private EntityManager em = EntityManagerFactorySingleton.getInstance().createEntityManager();
	private TelefoneDAO telefoneDAO = new TelefoneDAOImpl(em);
	private TelefoneToJSON converter = new TelefoneToJSON();
	

	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	@Path("/delete")
	public Response addTelefone(String incomingData) {
		
		Telefone fone = converter.convertJSONObjectToJavaObject(incomingData);
		telefoneDAO.insert(fone);
		
		return Response.ok().build();
	}
	

	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	public Response removeTelefone(String incomingData) {
		
		System.out.println();
		System.out.println(incomingData);
		System.out.println();
		
		return Response.ok().build();
	}

	
	
	
	
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public Response returnListaTelefonica() {
		
		List<Telefone> phoneList = telefoneDAO.findAll();
		JSONArray jsonArray = getJSONArray(phoneList);

		return Response.ok()
				.entity(jsonArray.toString())
				.build();
	}

	
	private JSONArray getJSONArray(List<Telefone> telefones) {
		try {
			
			JSONArray jsonArray = new JSONArray();
			for(Telefone fone : telefones) {
				JSONObject json = converter.convertJavaObjectToJSONObject(fone);
				jsonArray.put(json);
			}
			
			return jsonArray;
			
		} catch (JSONException e) {
			e.printStackTrace();
		}
		
		return null;
	}

}
